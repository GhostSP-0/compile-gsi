name: GKI Kernel Build

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
        description: >
          Output directory of gki,
          for example: android12-5.10
      version_name:
        required: true
        type: string
        description: >
          With SUBLEVEL of kernel,
          for example: android12-5.10.66
      tag:
        required: true
        type: string
        description: >
          Part of branch name of common kernel manifest,
          for example: android12-5.10-2021-11
      os_patch_level:
        required: false
        type: string
        description: >
          Patch level of common kernel manifest,
          for example: 2021-11
        default: 2022-05
      patch_path:
        required: true
        type: string
        description: >
          Directory name of .github/patches/<patch_path>
          for example: 5.10
      use_cache:
        required: false
        type: boolean
        default: true
      embed_ksud:
        required: false
        type: string
        default: ksud-aarch64-linux-android
        description: >
          Artifact name of prebuilt ksud to be embedded
          for example: ksud-aarch64-linux-android
      debug:
        required: false
        type: boolean
        default: false
    secrets:
      BOOT_SIGN_KEY:
        required: false
      CHAT_ID:
        required: false
      BOT_TOKEN:
        required: false
      MESSAGE_THREAD_ID:
        required: false

jobs:
  build:
    name: Build ${{ inputs.version_name }}
    runs-on: ubuntu-latest
    env:
      CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
      CCACHE_NOHASHDIR: "true"
      CCACHE_HARDLINK: "true"
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          temp-reserve-mb: 2048
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'

      - uses: actions/checkout@v4
        with:
          path: KernelSU
          fetch-depth: 0

      - name: Setup need_upload
        id: need_upload
        run: |
          if [ ! -z "${{ secrets.BOT_TOKEN }}" ]; then
            echo "UPLOAD=true" >> $GITHUB_OUTPUT
          else
            echo "UPLOAD=false" >> $GITHUB_OUTPUT
          fi

      - name: Setup evo source
        run: |
          echo "Free space:"
          df -h
          cd $GITHUB_WORKSPACE
          sudo apt-get install repo -y
          mkdir evo && cd evo
          repo init -u https://github.com/Evolution-X/manifest -b udc
          git clone https://github.com/ahnet-69/treble_manifest.git -b evo-udc .repo/local_manifests
          REMOTE_BRANCH=$(git ls-remote https://github.com/Dahlabanteng/kernel-manifest ${{ inputs.tag }})
          DEFAULT_MANIFEST_PATH=.repo/manifests/default.xml
          if grep -q deprecated <<< $REMOTE_BRANCH; then
            echo "Found deprecated branch: ${{ inputs.tag }}"
            sed -i 's/"${{ inputs.tag }}"/"deprecated\/${{ inputs.tag }}"/g' $DEFAULT_MANIFEST_PATH
            cat $DEFAULT_MANIFEST_PATH
          fi
          repo --version
          repo --trace sync -c -j$(nproc --all) --no-tags
          df -h

      - name: aplikasion patchead
        run: |
          patches/apply-patches.sh . trebledroid
          
      - name: adpting for evolution
        run: | 
          cd device/phh/treble
          bash generate.sh evo

      - name: Setup ccache
        run: | 
         export USE_CCACHE=1
         export CCACHE_COMPRESS=1
         export CCACHE_MAXSIZE=50G # 50 GB

      - name: Make working directory clean to avoid dirty
        working-directory: evo
        run: |
          git config --global user.email "bot@kernelsu.org"
          git config --global user.name "KernelSUBot"
          repo status

      - name: Build gsi
        working-directory: evo
        run: |
         source build/envsetup.sh
         ccache -M 50G -F 0
         lunch treble_arm64_bgN-userdebug 
         make systemimage -j$(nproc --all)
         
      - name: Compresion
        run: | 
         cd $GITHUB_WORKSPACE/evo/out/target/product/tdgsi_arm64_ab
         xz -9 -T0 -v -z system.img 
         cd $GITHUB_WORKSPACE/evo

      - name: Prepare artifacts
        id: prepareArtifacts
        run: |
          OUTDIR=out/target/product/tdgsi_arm64_ab
          if [ ! -e $OUTDIR ]; then
            OUTDIR=out/target/product/tdgsi_arm64_ab
          fi
          mkdir output
          cp $OUTDIR/* ./output/
          git clone https://github.com/Kernel-SU/AnyKernel3
          rm -rf ./AnyKernel3/*
          cp $OUTDIR/* ./AnyKernel3/

      - name: Upload Image and Image.gz
        uses: actions/upload-artifact@v4
        with:
          name: Image-${{ inputs.version_name }}_${{ inputs.os_patch_level }}
          path: ./output/*

      - name: Upload AnyKernel3
        uses: actions/upload-artifact@v4
        with:
          name: AnyKernel3-${{ inputs.version_name }}_${{ inputs.os_patch_level }}
          path: ./AnyKernel3/*
