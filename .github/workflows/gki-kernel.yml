name: GKI Kernel Build

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
        description: >
          Output directory of gki,
          for example: android12-5.10
      version_name:
        required: true
        type: string
        description: >
          With SUBLEVEL of kernel,
          for example: android12-5.10.66
      tag:
        required: true
        type: string
        description: >
          Part of branch name of common kernel manifest,
          for example: android12-5.10-2021-11
      os_patch_level:
        required: false
        type: string
        description: >
          Patch level of common kernel manifest,
          for example: 2021-11
        default: 2022-05
      patch_path:
        required: true
        type: string
        description: >
          Directory name of .github/patches/<patch_path>
          for example: 5.10
      use_cache:
        required: false
        type: boolean
        default: true
      embed_ksud:
        required: false
        type: string
        default: ksud-aarch64-linux-android
        description: >
          Artifact name of prebuilt ksud to be embedded
          for example: ksud-aarch64-linux-android
      debug:
        required: false
        type: boolean
        default: false
    secrets:
      BOOT_SIGN_KEY:
        required: false
      CHAT_ID:
        required: false
      BOT_TOKEN:
        required: false
      MESSAGE_THREAD_ID:
        required: false

jobs:
  build:
    name: Build ${{ inputs.version_name }}
    runs-on: ubuntu-latest
    env:
      CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
      CCACHE_NOHASHDIR: "true"
      CCACHE_HARDLINK: "true"
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          temp-reserve-mb: 2048
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'

      - uses: actions/checkout@v4
        with:
          path: KernelSU
          fetch-depth: 0

      - name: Setup need_upload
        id: need_upload
        run: |
          if [ ! -z "${{ secrets.BOT_TOKEN }}" ]; then
            echo "UPLOAD=true" >> $GITHUB_OUTPUT
          else
            echo "UPLOAD=false" >> $GITHUB_OUTPUT
          fi
      
      - name: install SDK
        run: | 
         cd $GITHUB_WORKSPACE
         wget https://dl.google.com/android/repository/platform-tools-latest-linux.zip
         unzip platform-tools-latest-linux.zip
         if [ -d "$HOME/platform-tools" ] ; then 
            PATH="$HOME/platform-tools:$PATH"
         fi

      - name: install open jdk 8
        uses: actions/setup-java@v3
        with:
           distribution: 'zulu'
           java-version: '8'

      - name: install conpile
        run: | 
         sudo apt install bc bison build-essential curl flex g++-multilib gcc-multilib git gnupg gperf libxml2 \
         lib32z1-dev liblz4-tool libncurses5-dev libsdl1.2-dev libwxgtk3.0-gtk3-dev imagemagick git \
         lunzip lzop schedtool squashfs-tools xsltproc zip zlib1g-dev python-is-python3 perl  \
         xmlstarlet virtualenv xz-utils rr jq libncurses5 pngcrush lib32ncurses5-dev git-lfs libxml2 \
         openjdk-11-jdk-headless

      - name: Setup kernel source
        run: |
          echo "Free space:"
          df -h
          cd $GITHUB_WORKSPACE
          sudo apt install repo
          mkdir rom && cd rom
          git config --global user.email "bot@kernelsu.org"
          git config --global user.name "KernelSUBot"
          repo init -u https://github.com/LineageOS/android.git -b lineage-21.0
          git clone https://github.com/phhusson/treble_manifest .repo/local_manifests -b android-12.0
          if grep -q deprecated <<< $REMOTE_BRANCH; then
            echo "Found deprecated branch: ${{ inputs.tag }}"
            sed -i 's/"${{ inputs.tag }}"/"deprecated\/${{ inputs.tag }}"/g' $DEFAULT_MANIFEST_PATH
            cat $DEFAULT_MANIFEST_PATH
           fi
          repo sync -c -j6 --force-sync --no-tags --no-clone-bundle

      - name: patch
        run: |
          cd $GITHUB_WORKSPACE/rom
          git clone https://github.com/phhusson/treble_experimentations/releases/latest/download/patches-for-developers.zip
          unzip patches-for-developers.zip
          git am patch
          
      - name: Setup ccache
        if: inputs.use_cache == true
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: gki-kernel-aarch64-${{ inputs.version_name }}
          max-size: 50G
          save: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}

      - name: Make working directory clean to avoid dirty
        working-directory: android-kernel
        run: |
          rm common/android/abi_gki_protected_exports_* || echo "No protected exports!"
          git config --global user.email "bot@kernelsu.org"
          git config --global user.name "KernelSUBot"
          cd common/ && git add -A && git commit -a -m "Add KernelSU"
          repo status

      - name: Build gsi
        working-directory: rom
        run: |
          .build/envsetup.sh
           lunch treble_arm64_avN-userdebug
           WITHOUT_CHECK_API=true make -j$(nproc) systemimage
      - name: Prepare artifacts
        id: prepareArtifacts
        run: |
          OUTDIR=rom/out/target/product
          if [ ! -e $OUTDIR ]; then
            OUTDIR=rom/out/target/product
          fi
          mkdir output
          cp $OUTDIR/* ./output/
          git clone https://github.com/Kernel-SU/AnyKernel3
          rm -rf ./AnyKernel3/*
          cp $OUTDIR/* ./AnyKernel3/

      - name: Upload Image and Image.gz
        uses: actions/upload-artifact@v4
        with:
          name: Image-${{ inputs.version_name }}_${{ inputs.os_patch_level }}
          path: ./output/*

      - name: Upload AnyKernel3
        uses: actions/upload-artifact@v4
        with:
          name: AnyKernel3-${{ inputs.version_name }}_${{ inputs.os_patch_level }}
          path: ./AnyKernel3/*
