name: GhostSP build Kernel
 
  
on: 
  workflow_call:
     inputs:
      version:
        required: true
        type: string
        description: >
          Output directory of gki,
          for example: android12-5.10
      version_name:
        required: true
        type: string
        description: >
          With SUBLEVEL of kernel,
          for example: android12-5.10.66
      tag:
        required: true
        type: string
        description: >
          Part of branch name of common kernel manifest,
          for example: android12-5.10-2021-11
      os_patch_level:
        required: false
        type: string
        description: >
          Patch level of common kernel manifest,
          for example: 2021-11
        default: 2022-05
      patch_path:
        required: true
        type: string
        description: >
          Directory name of .github/patches/<patch_path>
          for example: 5.10
      use_cache:
        required: false
        type: boolean
        default: true
      embed_ksud:
        required: false
        type: string
        default: ksud-aarch64-linux-android
        description: >
          Artifact name of prebuilt ksud to be embedded
          for example: ksud-aarch64-linux-android
      debug:
        required: false
        type: boolean
        default: false
     secrets:
      BOOT_SIGN_KEY:
        required: false
      CHAT_ID:
        required: false
      BOT_TOKEN:
        required: false
      MESSAGE_THREAD_ID: 
        required: false
        
      
jobs:
  build:
    name: Build my artifact
    runs-on: ubuntu-latest
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 512
          swap-size-mb: 1024
          remove-dotnet: 'true'
      - name: Checkout
        uses: actions/checkout@v3
          

      - name: Setup need_upload
        id: need_upload
        run: |
         echo "Free space:"
          df -h
          if [ ! -z "${{ secrets.BOT_TOKEN }}" ]; then
            echo "UPLOAD=true" >> $GITHUB_OUTPUT
          else
            echo "UPLOAD=false" >> $GITHUB_OUTPUT
          fi

      - name: Setup kernel source
        run: |
          echo "Free space:"
          df -h
          cd $GITHUB_WORKSPACE
          sudo apt-get install repo -y
          mkdir android-kernel && cd android-kernel
          repo init --u https://github.com/Evolution-X/manifest -b udc
          git clone https://github.com/ahnet-69/treble_manifest.git -b evo-udc .repo/local_manifests
          repo sync -c -j$(nproc --all) --force-sync --no-clone-bundle --no-tags
          df -h

      - name: Apply the patches
        run: | 
          patches/apply-patches.sh . trebledroid
          

      - name: Setup ccache
        if: inputs.use_cache == true
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: gki-kernel-aarch64-${{ inputs.version_name }}
          max-size: 50G
          save: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}

      - name: Adapting for Evolution-X
        working-directory: android-kernel
        run: |
           cd device/phh/treble
           bash generate.sh evo

      - name: Turn On Caching
        run: | 
          export USE_CCACHE=1
          export CCACHE_COMPRESS=1
          export CCACHE_MAXSIZE=50G # 50 GB

      - name: Build boot.img
        working-directory: android-kernel
        run: |
          source build/envsetup.sh
          ccache -M 50G -F 0
          lunch treble_arm64_bgN-userdebug 
          make systemimage -j$(nproc --all)


      - name: Compression
        run: | 
          cd out/target/product/tdgsi_arm64_ab
          xz -9 -T0 -v -z system.img
          
      - name: Prepare artifacts
        id: prepareArtifacts
        run: |
          OUTDIR=android-kernel/out/target/product/tdgsi_arm64_ab
          if [ ! -e $OUTDIR ]; then
            OUTDIR=android-kernel/out/target/product/tdgsi_arm64_ab
          fi
          mkdir output
          cp $OUTDIR/* ./output/
          git clone https://github.com/Kernel-SU/AnyKernel3
          rm -rf ./AnyKernel3/*
          cp $OUTDIR/* ./AnyKernel3/

      - name: Upload Image and Image.gz
        uses: actions/upload-artifact@v4
        with:
          name: Image-${{ inputs.version_name }}_${{ inputs.os_patch_level }}
          path: ./output/*

      - name: Upload AnyKernel3
        uses: actions/upload-artifact@v4
        with:
          name: AnyKernel3-${{ inputs.version_name }}_${{ inputs.os_patch_level }}
          path: ./AnyKernel3/*
